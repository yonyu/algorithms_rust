/*
Project Euler
Problem 2: Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the
sum of the even-valued terms.
*/

pub fn fibonacci_even_numbers_sum(cap: i32) -> i32 {
    let mut total : i32 = 2;
    let mut fib1 = 1;
    let mut fib2 = 2;
    let mut current : i32 = fib1 + fib2;
    while current <= cap {
        if current % 2 == 0 {
            total += current;
        }
        fib1 = fib2;
        fib2 = current;
        current = fib1 + fib2;
    }

    total
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_fibonacci_even_numbers_sum() {
        let result = fibonacci_even_numbers_sum(4_000_000);
        assert_eq!(result, 4613732);
    }
}